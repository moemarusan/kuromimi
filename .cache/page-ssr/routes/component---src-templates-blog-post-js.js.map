{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":";;;;;;;;;;;;;;;;;;AAA8B;AACD;AAE7B,MAAME,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAMC,QAAQ,GAAI,GAAEC,EAAgB,GAAE;EACtC,MAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAQ,KAAKH,QAAQ;EACjD,IAAII,MAAM;EAEV,IAAIF,UAAU,EAAE;IACdE,MAAM,gBACJV,gDAAA;MAAIY,SAAS,EAAC;IAAc,gBAC1BZ,gDAAA,CAACC,wCAAI;MAACW,SAAS,EAAC,YAAY;MAACC,EAAE,EAAC;IAAG,GAAET,KAAY,CAC/C,CACL;EACH,CAAC,MAAM;IACLM,MAAM,gBACJV,gDAAA,CAACC,wCAAI;MAACW,SAAS,EAAC,YAAY;MAACC,EAAE,EAAC;IAAG,GAChCT,KACG,CACP;EACH;EAEA,oBACEJ,gDAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAC,qBAAmBJ;EAAW,gBAC5DR,gDAAA;IAAKc,KAAK,EAAC;EAAM,gBACjBd,gDAAA;IAAQY,SAAS,EAAC;EAAe,GAAEF,MAAe,CAAC,eACnDV,gDAAA,eAAOK,QAAe,CAAC,eACvBL,gDAAA,iBAAQ,sBAEA,CACH,CACF,CAAC;AAEV,CAAC;AAED,iEAAeE,MAAM;;;;;;;;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA;;AAE8B;AACI;AAGlC,MAAMc,GAAG,GAAGA,CAAC;EAAEC,WAAW;EAAEb,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAA,IAAAa,kBAAA,EAAAC,mBAAA,EAAAC,qBAAA;EAChD,MAAM;IAAEC;EAAK,CAAC,GAAAC,wEAcb;EAED,MAAME,eAAe,GAAGP,WAAW,IAAII,IAAI,CAACI,YAAY,CAACR,WAAW;EACpE,MAAMS,YAAY,IAAAR,kBAAA,GAAGG,IAAI,CAACI,YAAY,cAAAP,kBAAA,uBAAjBA,kBAAA,CAAmBd,KAAK;EAC7C,IAAIuB,OAAO;EAEX,IAAIvB,KAAK,KAAKiB,IAAI,CAACI,YAAY,CAACrB,KAAK,EAAE;IACrCuB,OAAO,GAAG,IAAI;EAChB,CAAC,MAAM;IACLA,OAAO,GAAG,KAAK;EACjB;EAEA,oBACE3B,gDAAA,CAAAA,2CAAA,qBACIA,gDAAA,gBAAQ2B,OAAO,GAAGD,YAAY,GAAI,GAAEtB,KAAM,MAAKsB,YAAa,EAAS,CAAC,eACtE1B,gDAAA;IAAM6B,IAAI,EAAC,aAAa;IAACC,OAAO,EAAEN;EAAgB,CAAE,CAAC,eACrDxB,gDAAA;IAAM+B,QAAQ,EAAC,UAAU;IAACD,OAAO,EAAE1B;EAAM,CAAE,CAAC,eAC5CJ,gDAAA;IAAM+B,QAAQ,EAAC,gBAAgB;IAACD,OAAO,EAAEN;EAAgB,CAAE,CAAC,eAC5DxB,gDAAA;IAAM+B,QAAQ,EAAC,SAAS;IAACD,OAAO,EAAC;EAAS,CAAE,CAAC,eAC7C9B,gDAAA;IAAM+B,QAAQ,EAAC,cAAc;IAACD,OAAO,EAAEJ;EAAa,CAAE,CAAC,eACvD1B,gDAAA;IAAM+B,QAAQ,EAAC,UAAU;IAACD,OAAO,EAAC;EAA+C,CAAE,CAAC,eACpF9B,gDAAA;IAAM6B,IAAI,EAAC,cAAc;IAACC,OAAO,EAAC;EAAS,CAAE,CAAC,eAC9C9B,gDAAA;IAAM6B,IAAI,EAAC,iBAAiB;IAACC,OAAO,EAAE,EAAAX,mBAAA,GAAAE,IAAI,CAACI,YAAY,cAAAN,mBAAA,wBAAAC,qBAAA,GAAjBD,mBAAA,CAAmBa,MAAM,cAAAZ,qBAAA,uBAAzBA,qBAAA,CAA2Ba,OAAO,KAAK;EAAE,CAAE,CAAC,eAClFjC,gDAAA;IAAM6B,IAAI,EAAC,eAAe;IAACC,OAAO,EAAE1B;EAAM,CAAE,CAAC,eAC7CJ,gDAAA;IAAM6B,IAAI,EAAC,qBAAqB;IAACC,OAAO,EAAEN;EAAgB,CAAE,CAAC,eAC7DxB,gDAAA;IAAM6B,IAAI,EAAC,eAAe;IAACC,OAAO,EAAC;EAA+C,CAAE,CAAC,EACpFzB,QACD,CAAC;AAET,CAAC;AAEDW,GAAG,CAACkB,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRlB,WAAW,EAAG;AAChB,CAAC;AAEDD,GAAG,CAACoB,SAAS,GAAG;EACdnB,WAAW,EAAEF,0DAAgB;EAC7BoB,IAAI,EAAEpB,yDAAiB,CAACA,0DAAgB,CAAC;EACzCX,KAAK,EAAEW,0DAAgB,CAACyB;AAC1B,CAAC;AAED,iEAAexB,GAAG;;;;;;;;;;;;;;;;;;;;ACpEY;AACQ;;AAEtC;AACyC;AACN;AAEnC,MAAMyB,gBAAgB,GAAGA,CAAC;EAAElB,IAAI;EAAEpB;AAAS,CAAC,KAAK;EAAA,IAAAuC,qBAAA;EAC/C,MAAMC,IAAI,GAAGpB,IAAI,CAACqB,cAAc;EAChC,MAAMC,SAAS,GAAG,EAAAH,qBAAA,GAAAnB,IAAI,CAACF,IAAI,CAACI,YAAY,cAAAiB,qBAAA,uBAAtBA,qBAAA,CAAwBtC,KAAK,KAAK,OAAM;EAC1D,MAAM;IAAE0C,QAAQ;IAAEC;EAAK,CAAC,GAAGxB,IAAI;EAE/B,oBACEvB,gDAAA,CAACE,0DAAM;IAACC,QAAQ,EAAEA,QAAS;IAACC,KAAK,EAAEyC;EAAU,gBAC3C7C,gDAAA;IACEY,SAAS,EAAC,cAAc;IACxBoC,SAAS;IACTC,QAAQ,EAAC;EAA2B,gBAEpCjD,gDAAA;IAAQc,KAAK,EAAC;EAAa,gBACzBd,gDAAA;IAAIkD,QAAQ,EAAC,UAAU;IAACtC,SAAS,EAAC;EAAY,GAAE+B,IAAI,CAACQ,WAAW,CAAC/C,KAAU,CAAC,eAC5EJ,gDAAA;IAAOY,SAAS,EAAC;EAAW,GAAE+B,IAAI,CAACQ,WAAW,CAACC,IAAY,CACrD,CAAC,eACTpD,gDAAA;IACEqD,uBAAuB,EAAE;MAAEC,MAAM,EAAEX,IAAI,CAACY;IAAK,CAAE;IAC/CL,QAAQ,EAAC;EAAa,CACvB,CACM,CAAC,eACVlD,gDAAA;IAAKY,SAAS,EAAC;EAAe,gBAC5BZ,gDAAA;IACEwD,KAAK,EAAE;MACLC,OAAO,EAAG,MAAK;MACfC,QAAQ,EAAG,MAAK;MAChBC,cAAc,EAAG,eAAc;MAC/BC,SAAS,EAAG,MAAK;MACjBC,OAAO,EAAE;IACX;EAAE,gBAEF7D,gDAAA,aACG8C,QAAQ,iBACP9C,gDAAA,CAACC,wCAAI;IAACY,EAAE,EAAEiC,QAAQ,CAACgB,MAAM,CAACC,IAAK;IAACC,GAAG,EAAC;EAAM,GAAC,SACvC,EAAClB,QAAQ,CAACK,WAAW,CAAC/C,KACpB,CAEN,CAAC,eACLJ,gDAAA,aACG+C,IAAI,iBACH/C,gDAAA,CAACC,wCAAI;IAACY,EAAE,EAAEkC,IAAI,CAACe,MAAM,CAACC,IAAK;IAACC,GAAG,EAAC;EAAM,GACnCjB,IAAI,CAACI,WAAW,CAAC/C,KAAK,EAAC,SACpB,CAEN,CACF,CACD,CACC,CAAC;AAEb,CAAC;AAED,iEAAeqC,gBAAgB;AAExB,MAAMwB,IAAI,GAAGA,CAAC;EAAE1C;AAAK,CAAC,kBAC3BvB,gDAAA,CAACgB,uDAAG;EACFZ,KAAK,EAAEmB,IAAI,CAACqB,cAAc,CAACO,WAAW,CAAC/C,KAAM;EAC7Ca,WAAW,EAAEM,IAAI,CAACqB,cAAc,CAACO,WAAW,CAAClC,WAAW,IAAIM,IAAI,CAACqB,cAAc,CAACsB;AAAQ,CACzF,CACF;AAEM,MAAMC,SAAS,cAsCrB","sources":["webpack://kuromimi/./src/components/layout.js","webpack://kuromimi/./src/components/seo.js","webpack://kuromimi/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link className=\"blog-title\" to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"blog-title\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <div class=\"wrap\">\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n      ©︎moemarusan\n      </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  let is_root;\n\n  if (title === site.siteMetadata.title) {\n    is_root = true;\n  } else {\n    is_root = false;\n  }\n\n  return (\n    <>\n        <title>{is_root ? defaultTitle : `${title} | ${defaultTitle}`}</title>\n        <meta name=\"description\" content={metaDescription} />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={metaDescription} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:site_name\" content={defaultTitle} />\n        <meta property=\"og:image\" content=\"https://kuromimi.moemarusan.com/ogp-image.png\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={metaDescription} />\n        <meta name=\"twitter:image\" content=\"https://kuromimi.moemarusan.com/ogp-image.png\" />\n        {children}\n      </>\n  )\n}\n\nSeo.defaultProps = {\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"post-article\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header class=\"post-header\">\n          <h1 itemProp=\"headline\" className=\"post-title\">{post.frontmatter.title}</h1>\n          <small className=\"post-meta\">{post.frontmatter.date}</small>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const Head = ({ data }) => (\n  <Seo\n    title={data.markdownRemark.frontmatter.title}\n    description={data.markdownRemark.frontmatter.description || data.markdownRemark.excerpt}\n  />\n)\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","createElement","className","to","class","PropTypes","Seo","description","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","site","staticQueryData","data","metaDescription","siteMetadata","defaultTitle","is_root","Fragment","name","content","property","social","twitter","defaultProps","meta","propTypes","string","arrayOf","object","isRequired","BlogPostTemplate","_data$site$siteMetada","post","markdownRemark","siteTitle","previous","next","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","Head","excerpt","pageQuery"],"sourceRoot":""}