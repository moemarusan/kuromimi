{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":"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","sources":["webpack://kuromimi/./src/components/layout.js","webpack://kuromimi/./src/components/seo.js","webpack://kuromimi/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link className=\"blog-title\" to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"blog-title\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <div class=\"wrap\">\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n      ©︎moemarusan\n      </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  let is_root;\n\n  if (title === site.siteMetadata.title) {\n    is_root = true;\n  } else {\n    is_root = false;\n  }\n\n  return (\n    <>\n        <title>{is_root ? defaultTitle : `${title} | ${defaultTitle}`}</title>\n        <meta name=\"description\" content={metaDescription} />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={metaDescription} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:site_name\" content={defaultTitle} />\n        <meta property=\"og:image\" content=\"https://kuromimi.moemarusan.com/ogp-image.png\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={metaDescription} />\n        <meta name=\"twitter:image\" content=\"https://kuromimi.moemarusan.com/ogp-image.png\" />\n        {children}\n      </>\n  )\n}\n\nSeo.defaultProps = {\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"post-article\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header class=\"post-header\">\n          <h1 itemProp=\"headline\" className=\"post-title\">{post.frontmatter.title}</h1>\n          <small className=\"post-meta\">{post.frontmatter.date}</small>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const Head = ({ data }) => (\n  <Seo\n    title={data.markdownRemark.frontmatter.title}\n    description={data.markdownRemark.frontmatter.description || data.markdownRemark.excerpt}\n  />\n)\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","createElement","className","to","class","PropTypes","useStaticQuery","Seo","description","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","site","metaDescription","siteMetadata","defaultTitle","is_root","Fragment","name","content","property","social","twitter","defaultProps","meta","propTypes","string","arrayOf","object","isRequired","BlogPostTemplate","data","_data$site$siteMetada","post","markdownRemark","siteTitle","previous","next","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","Head","excerpt","pageQuery"],"sourceRoot":""}